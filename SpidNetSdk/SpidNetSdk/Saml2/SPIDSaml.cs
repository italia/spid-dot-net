using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SpidNetSdk.Saml2
{
    public class SPIDSaml : SPIDProvider
    {
        private SamlAccountSettings accountSettings;

        public SPIDSaml(SamlAccountSettings account, AppSettings app)
        {
            this.accountSettings = account;
            base.appSettings = app;
            Protocol = SPIDProtocols.SAML2;
        }

        public string GetNameID(string respBase64)
        {
            // onsume assertion generated by IdP and forwarded by UA throught redirect

            Saml2.Response samlResponse = new Response(accountSettings);
            samlResponse.LoadXmlFromBase64(respBase64);
            if (samlResponse.IsValid())
                return samlResponse.GetNameID();
            else throw new Exception("invalid response received from IdP");
        }

        public override string GetRedirect()
        {
            return this.GetSamlRedirect();
        }

        public string GetSamlRedirect()
        {
            // on first request from user-agent, generates the url where he should be redirected to

            Saml2.AuthRequest req = new AuthRequest(appSettings, accountSettings);

            string samlResponseQuery = accountSettings.IdpSsoBaseUrl + accountSettings.IdpSsoTargetUrl + "?SAMLRequest="
                + System.Web.HttpUtility.UrlEncode(req.GetRequest(AuthRequest.AuthRequestFormat.CompressedBase64))
                + "&SigAlg=" + "http%3A%2F%2Fwww.w3.org%2F2000%2F09%2Fxmldsig%23rsa-sha256";

            return samlResponseQuery + "&Signature=" + req.GetSignature(samlResponseQuery, appSettings.SpKeysPath, appSettings.SpKeysPassword);
        }

        public override string Consume(object authResponse)
        {
            return this.GetNameID((string)authResponse);
        }
    }
}
